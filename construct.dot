digraph construct {
    node [color=gray,shape=box];
    {rank=max;Sheer}

    local [
        shape = plaintext
        label =<
        <table border='1' cellborder='1'>
            <tr><td colspan="1">local</td></tr>
             <tr>
             <td port='port_one'>Dir</td>
            </tr>
             <tr>
             <td port='port_two'>File</td>
            </tr>
             <tr>
             <td port='port_three'>Film.yml</td>
            </tr>
        </table>
        >
    ];
    state [
        shape = plaintext
        label =<
        <table border='1' cellborder='1'>
            <tr><td colspan="1">state</td></tr>
             <tr>
             <td port='port_one'>Yaml</td>
            </tr>
             <tr>
             <td port='port_two'>Tree</td>
            </tr>
             <tr>
             <td port='port_three'>View</td>
            </tr>
             <tr>
             <td port='port_four'>position</td>
            </tr>
        </table>
        >
    ];
    subgraph cluster_vim{
        l;
        k;
        j;
        h;
    }
    h -> state:port_four
    j -> state:port_four
    k -> state:port_four
    l -> state:port_four
    subgraph cluster_init{
        label = "Init";
        Tree_Instance ;
        Yaml_Instance;
    }

    subgraph dependencies{
        // label="asd";
        // labelloc= "t";
        Vue;
        Vuex;
    }
    { rank=same; Vue Vuex };
    Vuex -> Vue[arrowhead=none];
    Vuex -> {Sheer};
    state -> Vuex;
    Vue -> Sheer ;
    vite -> Vue;
    vite -> Vuex;

    // subgraph cluster_p{
    subgraph cluster_datastructure{
        // label="ad";
        Tree
        Yaml
        pos = "1,2!"
    }
    // { rank=  };
    { rank=same; Tree Yaml };
    { rank=same; Tree_Instance Yaml_Instance state};
    Tree -> Tree_Instance;
    Yaml -> Yaml_Instance;
    {Tree_Instance} -> state:port_two;
    Yaml_Instance -> state:port_one;
    // Tree_Instance -> local

    local:port_one -> Tree_Instance;
    local:port_two -> Tree_Instance;
    local:port_three -> Yaml_Instance[label="readfilmPath"];

    {rank = some; 视频 图片}
    视频 -> 图片
    {视频,图片} -> Tree_Instance


}
